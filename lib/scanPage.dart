import 'dart:async';
import 'dart:developer';

import 'package:flutter/material.dart';
import 'package:mobile_scanner/mobile_scanner.dart';
import 'package:shared_preferences/shared_preferences.dart';

class ScanPage extends StatefulWidget {
  const ScanPage({super.key});

  @override
  State<ScanPage> createState() => _ScanPageState();
}

class _ScanPageState extends State<ScanPage> {
  final MobileScannerController controller = MobileScannerController();
  final PageController pageController = PageController();
  List<String> errorList = [
    "880609144551324102437081817",
    "880609144551324102437082228",
    "880609144551324102437085905",
    "880609144551324102437090240",
    "880609144551324102437090503",
    "880609144551324102437090604",
    "880609144551324102437090639",
    "880609144551324102437090749",
    "880609144551324102437090825",
    "880609144551324102437090936",
    "880609144551324102437091046",
    "880609144551324102437091257",
    "880609144551324102437091631",
    "880609144551324102437091849",
    "880609144551324102437092035",
    "880609144551324102437092847",
    "880609144551324102437093212",
    "880609144551324102437093407",
    "880609144551324102437093818",
    "880609144551324102437093854",
    "880609144551324102437094005",
    "880609144551324102437094216",
    "880609144551324102437094733",
    "880609144551324102437094851",
    "880609144551324102437095014",
    "880609144551324102437095201",
    "880609144551324102437095459",
    "880609144551324102437095611",
    "880609144551324102437095758",
    "880609144551324102437095834",
    "880609144551324102437100335",
    "880609144551324102437100542",
    "880609144551324102437100657",
    "880609144551324102437100854",
    "880609144551324102437101006",
    "880609144551324102437101117",
    "880609144551324102437101228",
    "880609144551324102437101303",
    "880609144551324102437101340",
    "880609144551324102437101707",
    "880609144551324102437103057",
    "880609144551324102437103443",
    "880609144551324102437103518",
    "880609144551324102437103554",
    "880609144551324102437103742",
    "880609144551324102437103854",
    "880609144551324102437103930",
    "880609144551324102437104041",
    "880609144551324102437104425",
    "880609144551324102437104630",
    "880609144551324102437104706",
    "880609144551324102437104929",
    "880609144551324102437105103",
    "880609144551324102437105304",
    "880609144551324102437105633",
    "880609144551324102437105709",
    "880609144551324102437105956",
    "880609144551324102437110125",
    "880609144551324102437110237",
    "880609144551324102437110313",
    "880609144551324102437110349",
    "880609144551324102437110818",
    "880609144551324102437111102",
    "880609144551324102437111418",
    "880609144551324102437111555",
    "880609144551324102437111731",
    "880609144551324102437111807",
    "880609144551324102437111918",
    "880609144551324102437111954",
    "880609144551324102437112105",
    "880609144551324102437112142",
    "880609144551324102437112218",
    "880609144551324102437112328",
    "880609144551324102437112903",
    "880609144551324102437113015",
    "880609144551324102437113435",
    "880609144551324102437113739",
    "880609144551324102437114131",
    "880609144551324102437114301",
    "880609144551324102437114544",
    "880609144551324102437114852",
    "880609144551324102437120353",
    "880609144551324102437120659",
    "880609144551324102437121529",
    "880609144551324102437122333",
    "880609144551324102437123222",
    "880609144551324102437123853",
    "880609144551324102437123929",
    "880609144551324102437124947",
    "880609144551324102437125023",
    "880609144551324102437125418",
    "880609144551324102437130233",
    "880609144551324102437130344",
    "880609144551324102437134822",
    "880609144551324102437140135",
    "880609144551324102437140515",
    "880609144551324102437141430",
    "880609144551324102437142850",
    "880609144551324102437145854",
    "880609144551324102437150004",
    "880609144551324102437150416",
    "880609144551324102437150612",
    "880609144551324102437150834",
    "880609144551324102437153540",
    "880609144551324102437153615",
    "880609144551324102437155159",
    "880609144551324102437155352",
    "880609144551324102437155616",
    "880609144551324102437161622",
    "880609144551324102437161647",
    "880609144551324102437161835",
    "880609144551324102437162758",
    "880609144551324102437173837",
    "880609144551324102437173950",
    "880609144551324102437175254",
    "880609144551324102437180419",
    "880609144551324102437182415",
    "880609144551324102437183958",
    "880609144551324102437193646",
    "880609144551324102437195000",
    "880609144551324102437195147",
    "880609144551324102437202022",
    "880609144551324102437202843",
    "880609144551324102437203031",
    "880609144551324102437204216",
    "880609144551324102437204516",
    "880609144551324102437204829",
    "880609144551324102437210215",
    "880609144551324102437210402",
    "880609144551324102437210513",
    "880609144551324102437211422",
    "880609144551324102437212620",
    "880609144551324102437215834",
    "880609144551324102437221513",
    "880609144551324102437221556",
    "880609144551324102437221821",
    "880609144551324102437224213",
    "880609144551324102437232240",
    "880609144551324102537002239",
    "880609144551324102537002426",
    "880609144551324102537002717",
    "880609144551324102537003526",
    "880609144551324102537004313",
    "880609144551324102537004349",
    "880609144551324102537004835",
    "880609144551324102537005306",
    "880609144551324102537005317",
    "880609144551324102537010002",
    "880609144551324102537010246",
    "880609144551324102537011018",
    "880609144551324102537011155",
    "880609144551324102537011259",
    "880609144551324102537011306",
    "880609144551324102537011717",
    "880609144551324102537012507",
    "880609144551324102537014343",
    "880609144551324102537014437",
    "880609144551324102537014810",
    "880609144551324102537015022",
    "880609144551324102537020958",
    "880609144551324102537021627",
    "880609144551324102537021739",
    "880609144551324102537024900",
    "880609144551324102537025011",
    "880609144551324102537030059",
    "880609144551324102537030359",
    "880609144551324102537030511",
    "880609144551324102537030811",
    "880609144551324102537031513",
    "880609144551324102537031548",
    "880609144551324102537032601",
    "880609144551324102537033422",
    "880609144551324102537033610",
    "880609144551324102537034737",
    "880609144551324102537035413",
    "880609144551324102537040049",
    "880609144551324102537040252",
    "880609144551324102537041433",
    "880609144551324102537072502",
    "880609144551324102537084831",
    "880609144551324102537090718",
    "880609144551324102537100434",
    "880609144551324102537104010",
    "880609144551324102537110553",
    "880609144551324102537113930",
    "880609144551324102537130113",
    "880609144551324102537135106",
    "880609144551324102537142206",
    "880609144551324102537143405",
    "880609144551324102537190347",
    "880609144551324102537200842",
    "880609144551324102537203035",
    "880609144551324102537210827",
    "880609144551324102537213654",
    "880609144551324102537213712",
    "880609144551324102537223526",
    "880609144551324102537234541",
    "880609144551324102637002800",
    "880609144551324102637011759",
    "880609144551324102637013130",
    "880609144551324102637015402",
    "880609144551324102637021149",
    "880609144551324102637030358",
    "880609144551324102637033759",
    "880609144551324102637033939",
    "880609144551324102637035617",
    "880609144551324102637040727",
    "880609144551324102637052850",
    "880609144551324102637053207",
    "880609144551324102637065624",
    "880609144551324102637070750",
    "880609144551324102637072249",
    "880609144551324102837062547",
    "880609144551324102837065539",
    "880609144551324102837070626",
    "880609144551324102837071708",
    "880609144551324102837071801",
    "880609144551324102837141942",
    "880609144551324102837142443",
    "880609144551324102837153358",
    "880609144551324102837153732",
    "880609144551324102837183531",
    "880609144551324102837184021",
    "880609144551324102837220643",
    "880609144551324102837221829",
    "880609144551324102937010839",
    "880609144551324102937012451",
    "880609144551324102937014135",
    "880609144551324102937014723",
    "880609144551324102937020118",
    "880609144551324102937020309",
    "880609144551324102937020356",
    "880609144551324102937020507",
    "880609144551324102937020543",
    "880609144551324102937034031",
    "880609144551324102937050441",
    "880609144551324102937064043",
    "880609144551324102937070537",
    "880609144551324102937081759",
    "880609144551324102937084943",
    "880609144551324102937092750",
    "880609144551324102937093058",
    "880609144551324102937094601",
    "880609144551324102937100357",
    "880609144551324102937101446",
    "880609144551324102937101540",
    "880609144551324102937102721",
    "880609144551324102937103455",
    "880609144551324102937105501",
    "880609144551324102937112412",
    "880609144551324102937112747",
    "880609144551324102937113125",
    "880609144551324102937120056",
    "880609144551324102937120142",
    "880609144551324102937121725",
    "880609144551324102937122521",
    "880609144551324102937123343",
    "880609144551324102937131059",
    "880609144551324102937131615",
    "880609144551324102937131840",
    "880609144551324102937132551",
    "880609144551324102937132655",
    "880609144551324102937134302",
    "880609144551324102937134629",
    "880609144551324102937135755",
    "880609144551324102937135915",
    "880609144551324102937141927",
    "880609144551324102937141938",
    "880609144551324102937142823",
    "880609144551324102937143519",
    "880609144551324102937145623",
    "880609144551324102937150058",
    "880609144551324102937153035",
    "880609144551324102937153112",
    "880609144551324102937155831",
    "880609144551324102937162449",
    "880609144551324102937170935",
    "880609144551324102937175026",
    "880609144551324102937180415",
    "880609144551324102937190203",
    "880609144551324102937192259",
    "880609144551324102937195823",
    "880609144551324102937195848",
    "880609144551324102937202455",
    "880609144551324102937202634",
    "880609144551324102937231350",
    "880609144551324102937232030",
    "880609144551324102937232337",
    "880609144551324103037002040",
    "880609144551324103037002718",
    "880609144551324103037003409",
    "880609144551324103037004443",
    "880609144551324103037005726",
    "880609144551324103037025809",
    "880609144551324103037025957",
    "880609144551324103037030557",
    "880609144551324103037030856",
    "880609144551324103037031042",
    "880609144551324103037033151",
    "880609144551324103037033442",
    "880609144551324103037034054",
    "880609144551324103037035224",
    "880609144551324103037035326",
    "880609144551324103037041051",
    "880609144551324103037041127",
    "880609144551324103037041203",
    "880609144551324103037044829",
    "880609144551324103037051246",
    "880609144551324103037060717",
    "880609144551324103037062111",
    "880609144551324103037064525",
    "880609144551324103037071351",
    "880609144551324103037071530",
    "880609144551324103037081844",
    "880609144551324103037082050",
    "880609144551324103037083935",
    "880609144551324103037084754",
    "880609144551324103037091709",
    "880609144551324103037094349",
    "880609144551324103037095024",
    "880609144551324103037095708",
    "880609144551324103037100045",
    "880609144551324103037100344",
    "880609144551324103037101130",
    "880609144551324103037103030",
    "880609144551324103037103814",
    "880609144551324103037104555",
    "880609144551324103037105520",
    "880609144551324103037111603",
    "880609144551324103037113104",
    "880609144551324103037113945",
    "880609144551324103037114021",
    "880609144551324103037114244",
    "880609144551324103037115151",
    "880609144551324103037115704",
    "880609144551324103037120644",
    "880609144551324103037120758",
    "880609144551324103037121023",
    "880609144551324103037131539",
    "880609144551324103037134550",
    "880609144551324103037134625",
    "880609144551324103037135257",
    "880609144551324103037140714",
    "880609144551324103037142640",
    "880609144551324103037143709",
    "880609144551324103037184749",
    "880609144551324103037213844",
    "880609144551324103037214555",
    "880609144551324103037221840",
    "880609144551324103037225748",
    "880609144551324103037232059",
    "880609144551324103037233210",
    "880609144551324103137001715",
    "880609144551324103137005855",
    "880609144551324103137011156",
    "880609144551324103137011826",
    "880609144551324103137014754",
    "880609144551324103137021327",
    "880609144551324103137021616",
    "880609144551324103137022340",
    "880609144551324103137025317",
    "880609144551324103137030823",
    "880609144551324103137084300",
    "880609144551324103137084447",
    "880609144551324103137085207",
    "880609144551324103137085212",
    "880609144551324103137090244",
    "880609144551324103137090619",
    "880609144551324103137094645",
    "880609144551324103137094942",
    "880609144551324103137105210",
    "880609144551324103137112707",
    "880609144551324103137120336",
    "880609144551324103137120448",
    "880609144551324103137122703",
    "880609144551324103137122926",
    "880609144551324103137123900",
    "880609144551324103137124314",
    "880609144551324103137130740",
    "880609144551324103137131321",
    "880609144551324103137132620",
    "880609144551324103137133325",
    "880609144551324103137133503",
    "880609144551324103137133629",
    "880609144551324103137133924",
    "880609144551324103137134351",
    "880609144551324103137140510",
    "880609144551324103137214338",
    "880609144551324103137221414",
    "880609144551324103137222512",
    "880609144551324103137223944"
  ];

  @override
  void initState() {
    super.initState();
    _loadInitialValues();
  }

  @override
  Future<void> dispose() async {
    pageController.dispose();
    super.dispose();
    await controller.dispose();
  }

  Future<void> _loadInitialValues() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    List<String>? savedValues = prefs.getStringList('check_list');

    // 저장된 값이 있으면 사용, 없으면 초기값 사용
    if (savedValues != null) {
      setState(() {
        errorList = savedValues;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('QR Scanner')),
      backgroundColor: Colors.black,
      body: PageView(
        controller: pageController,
        onPageChanged: (index) async {
          // Stop the camera view for the current page,
          // and then restart the camera for the new page.
          await controller.stop();

          // When switching pages, add a delay to the next start call.
          // Otherwise the camera will start before the next page is displayed.
          await Future.delayed(const Duration(seconds: 1, milliseconds: 500));

          if (!mounted) {
            return;
          }

          unawaited(controller.start());
        },
        children: [
          _BarcodeScannerPage(controller: controller, errorList: errorList),
        ],
      ),
    );
  }
}

class _BarcodeScannerPage extends StatelessWidget {
  const _BarcodeScannerPage({
    required this.controller,
    required this.errorList,
    super.key,
  });

  final MobileScannerController controller;
  final List<String> errorList; // errorList 추가

  bool scanDataCheck(String? text) {
    if (errorList.contains(text)) {
      return false;
    } else {
      return true;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        MobileScanner(
          controller: controller,
          fit: BoxFit.contain,
          errorBuilder: (context, error, child) {
            return const Center(
              child: Text('fail'),
            );
          },
        ),
        Align(
          alignment: Alignment.bottomCenter,
          child: Container(
            alignment: Alignment.bottomCenter,
            height: 100,
            color: Colors.black.withOpacity(0.4),
            child: Center(
              child: StreamBuilder(
                stream: controller.barcodes,
                builder: (context, snapshot) {
                  final scannedBarcodes = snapshot.data?.barcodes ?? [];

                  if (scannedBarcodes.isEmpty) {
                    return const Text(
                      '스캔해주세요.',
                      overflow: TextOverflow.fade,
                      style: TextStyle(color: Colors.white),
                    );
                  } else if(scannedBarcodes?.first?.displayValue == null){
                    return const Text(
                      '잘못된 QR 코드입니다. 다시 시도해주세요.',
                      overflow: TextOverflow.fade,
                      style: TextStyle(color: Colors.white),
                    );
                  }else {
                    controller.stop(); // 카메라 정지
                    Future.delayed(Duration.zero, () {
                      showDialog(
                        context: context,
                        builder: (BuildContext context) {
                          return AlertDialog(
                            title: Text(
                              scanDataCheck(scannedBarcodes?.first?.displayValue) ? '정상 제품' : '불량 제품',
                              style: TextStyle(
                                  color:
                                      scanDataCheck(scannedBarcodes?.first?.displayValue) ? Colors.black : Colors.red),
                            ),
                            content: Text(
                              scanDataCheck(scannedBarcodes?.first?.displayValue) ? '정상입니다.' : '확인이 필요합니다.',
                            ),
                            actions: <Widget>[
                              TextButton(
                                onPressed: () async {
                                  await controller.start(); // 카메라 다시 시작
                                  scannedBarcodes.clear();
                                  Navigator.of(context).pop(); // 알림창 닫기
                                },
                                child: const Text('확인'),
                              ),
                            ],
                          );
                        },
                      );
                    });
                    return Container();
                    // return Text(
                    //   scannedBarcodes.first.displayValue ?? 'No display value.',
                    //   overflow: TextOverflow.fade,
                    //   style: const TextStyle(color: Colors.white),
                    // );
                  }
                },
              ),
            ),
          ),
        ),
      ],
    );
  }
}
